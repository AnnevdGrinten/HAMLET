from os import path
from rattle import Run, ReadGroup

RUN = Run(config)

# TODO: ensure db indices exist

rule align_vars:
    input:
        fq1=RUN.output("{sample}/{sample}-R1.fq.gz"),
        fq2=RUN.output("{sample}/{sample}-R2.fq.gz"),
        index=RUN.settings["genome_gmap_index"]
    output:
        bam=RUN.output("{sample}/snv-indels/{sample}.snv-indel.bam"),
        bai=RUN.output("{sample}/snv-indels/{sample}.snv-indel.bai"),
    params:
        rg_sample="{sample}"
    threads: 8
    conda: srcdir("envs/align_vars.yml")
    shell:
        "gsnap --dir `dirname {input.index}` --db `basename {input.index}`"
        " --batch 4 --nthreads {threads}"
        " --novelsplicing 1 --npaths 1 --quiet-if-excessive"
        " --read-group-name={params.rg_sample} --read-group-id={params.rg_sample}"
        " --format sam --gunzip {input.fq1} {input.fq2}"
        " | picard SortSam I=/dev/stdin O={output.bam} SORT_ORDER=coordinate"
        " VALIDATION_STRINGENCY=SILENT CREATE_INDEX=true"

rule call_vars:
    input:
        bam=RUN.output("{sample}/snv-indels/{sample}.snv-indel.bam"),
        ref=RUN.settings["genome_fasta"],
    output:
        vcf=RUN.output("{sample}/snv-indels/{sample}.raw.vcf.gz")
    threads: 3
    conda: srcdir("envs/call_vars.yml")
    shell:
        "samtools mpileup -f {input.ref} -d 1000000 -s -B {input.bam}"
        " | grep -vP '\\t\\t'"
        " | varscan mpileup2cns --strand-filter 0 --output-vcf 1 --min-var-freq 0.1 --p-value 0.05"
        " | grep -vP '\\t\./\.|\\t0/0'"
        " | bgzip -c > {output.vcf}"
