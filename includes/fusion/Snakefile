include: "common.smk"


# Put each sample name in a SimpleNamespace to mimic Snakemake wildcard usage
# (e.g {wildcards.sample}). This is only used in the 'all' rule.
samples = [SimpleNamespace(sample=sample) for sample in pep.sample_table["sample_name"]]


rule all:
    input:
        arriba=[module_output.arriba(sample) for sample in samples],
        json=[module_output.json(sample) for sample in samples],


rule arriba:
    input:
        bam=get_bam,
        ref=config["genome_fasta"],
        gtf=config["gtf"],
        blacklist=config["blacklist"],
        known_fusions=config["known_fusions"],
        protein_domains=config["protein_domains"],
    output:
        fusions="{sample}/fusion/arriba/fusions.tsv",
        discarded="{sample}/fusion/arriba/fusions.discarded.tsv",
    log:
        "log/arriba.{sample}.txt",
    threads: 1
    container:
        containers["arriba"]
    shell:
        """
        arriba \
            -x {input.bam} \
            -a {input.ref} \
            -g {input.gtf} \
            -b {input.blacklist} \
            -k {input.known_fusions} \
            -t {input.known_fusions} \
            -p {input.protein_domains} \
            -o {output.fusions} \
            -O {output.discarded} 2> {log}
        """


rule arriba_to_json:
    input:
        fusions="{sample}/fusion/arriba/fusions.tsv",
        src=srcdir("scripts/arriba2json.py"),
    output:
        json="{sample}/fusion/arriba/fusions.json",
    log:
        "log/arriba_to_json.{sample}.txt",
    threads: 1
    container:
        containers["arriba"]
    shell:
        """
        {input.src} {input} > {output} 2> {log}
        """


rule json_output:
    input:
        json="{sample}/fusion/arriba/fusions.json",
        src=srcdir("scripts/json-output.py"),
    output:
        json="{sample}/fusion/fusion-output.json",
    log:
        "log/fusion_json_output.{sample}.txt",
    threads: 1
    container:
        containers["arriba"]
    shell:
        """
        {input.src} {input.json} > {output} 2> {log}
        """
