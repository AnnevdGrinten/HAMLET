# QC pipeline should attempt to generate the specified files
- name: test-qc-dry-run-trio
  tags:
    - dry-run
    - qc
  command: >
    snakemake -n
    --snakefile includes/qc-seq/Snakefile
    --configfile test/data/config/test-qc-trio.config
  stdout:
    contains:
    # TestSample1 should contain a single readgroup
    - "TestSample1/qc-seq/rg_1"

    # TestSample2 should contain two readgroups
    - "TestSample2/qc-seq/rg_2"
    - "TestSample2/qc-seq/rg_3"

    # TestSample3 should contain three readgroups
    - "TestSample3/qc-seq/rg_1"
    - "TestSample3/qc-seq/rg_2"
    - "TestSample3/qc-seq/rg_3"

# Singularity should be available
- name: test-qc-sanity-singularity
  tags:
    - sanity
    - qc
  command: >
    singularity --version
  stdout:
    contains_regex:
      - "singularity(-ce)? version 3"

# QC pipeline should run successfully on multiple samples with differing number
# of readgroups
- name: test-qc-trio
  tags:
    - functional
    - qc
  command: >
    snakemake -rp
    --snakefile includes/qc-seq/Snakefile
    --configfile test/data/config/test-qc-trio.config
    --cores 1
    --verbose
    --use-singularity
    --singularity-args '--cleanenv --bind /tmp'
  files:
    # QC pipeline should create output files for TestSample1
    - path: "TestSample1/TestSample1-R1.fq.gz"
    - path: "TestSample1/TestSample1-R2.fq.gz"
    - path: "TestSample1/qc-seq/rg_1/stats.json"
    - path: "TestSample1/qc-seq/rg_1"
    - path: "TestSample1/qc-seq/rg_1/fastqc-R1-processed"
    - path: "TestSample1/qc-seq/rg_1/fastqc-R2-processed"
    - path: "TestSample1/qc-seq/rg_1/fastqc-R1-raw"
    - path: "TestSample1/qc-seq/rg_1/fastqc-R2-raw"

    # QC pipeline should create output files for TestSample2
    - path: "TestSample2/TestSample2-R1.fq.gz"
    - path: "TestSample2/TestSample2-R2.fq.gz"
    - path: "TestSample2/qc-seq/rg_2/TestSample2-rg_2-R1.fq.gz"
    - path: "TestSample2/qc-seq/rg_2/TestSample2-rg_2-R2.fq.gz"
    - path: "TestSample2/qc-seq/rg_3/TestSample2-rg_3-R1.fq.gz"
    - path: "TestSample2/qc-seq/rg_3/TestSample2-rg_3-R2.fq.gz"

    # QC pipeline should create output file for TestSample3
    - path: "TestSample3/TestSample3-R1.fq.gz"
    - path: "TestSample3/TestSample3-R2.fq.gz"
    - path: "TestSample3/qc-seq/rg_1/TestSample3-rg_1-R1.fq.gz"
    - path: "TestSample3/qc-seq/rg_2/TestSample3-rg_2-R1.fq.gz"
    - path: "TestSample3/qc-seq/rg_3/TestSample3-rg_3-R1.fq.gz"

# QC pipeline should detect low quality fastq files
- name: test-qc-single-low-qual-adapters
  tags:
    - functional
    - qc
  command: >
    snakemake -rp
    --snakefile includes/qc-seq/Snakefile
    --configfile test/data/config/test-qc-single-low-qual-adapters.config
    --cores 1
    --verbose
    --use-singularity
    --singularity-args '--cleanenv --bind /tmp'
  files:
    # FastQC summary should exist, and contain the following results
    - path: "low_qual/qc-seq/readgroup1/fastqc-R1-raw/ct_r1_fastqc/summary.txt"
      contains:
        - "FAIL\tPer base sequence quality\tct_r1.fq.gz"
        - "WARN\tPer base N content\tct_r1.fq.gz"
        - "FAIL\tOverrepresented sequences\tct_r1.fq.gz"
        - "FAIL\tAdapter Content\tct_r1.fq.gz"
    - path: "low_qual/qc-seq/readgroup1/fastqc-R1-processed/low_qual-readgroup1-R1_fastqc/summary.txt"
      contains:
        - "PASS\tPer base sequence quality\tlow_qual-readgroup1-R1.fq.gz"
        - "PASS\tPer base N content\tlow_qual-readgroup1-R1.fq.gz"
        - "WARN\tOverrepresented sequences\tlow_qual-readgroup1-R1.fq.gz"
        - "PASS\tAdapter Content\tlow_qual-readgroup1-R1.fq.gz"
