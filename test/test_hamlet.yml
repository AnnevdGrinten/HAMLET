# HAMLET pipeline should attempt to generate specified files
- name: test-hamlet-dry-run-trio
  tags:
    - dry-run
    - hamlet
  command: >
    snakemake -n
    --snakefile Snakefile
    --reason
    --printshellcmds
    --verbose
    --configfile test/data/config/hamlet-dry.json
    --config pepfile=test/pep/chrM-trio.csv
  stdout:
    contains:
      # The pipeline should create the final output files for TestSample1
      - "TestSample1/TestSample1.summary.json"
      - "TestSample1/hamlet_report.TestSample1.pdf"
      - "TestSample1/TestSample1.summary.json"
      # The pipeline should create the final output files for TestSample2
      - "TestSample2/TestSample2.summary.json"
      - "TestSample2/hamlet_report.TestSample2.pdf"
      - "TestSample2/TestSample2.summary.json"
      # The pipeline should create the final output files for TestSample3
      - "TestSample3/TestSample3.summary.json"
      - "TestSample3/hamlet_report.TestSample3.pdf"
      - "TestSample3/TestSample3.summary.json"

    contains_regex:
      # The align_kmt2a rule should use the output of the qc-seq module
      - 'bwa mem .*kmt2a-213.fa *TestSample1/TestSample1.R1.fq.gz'
      - 'bwa mem .*kmt2a-213.fa *TestSample2/TestSample2.R1.fq.gz'
      - 'bwa mem .*kmt2a-213.fa *TestSample3/TestSample3.R1.fq.gz'
      # The align_flt3 rule should use the output of the qc-seq module
      - 'bwa mem .*flt3-001.fa *TestSample1/TestSample1.R1.fq.gz'
      - 'bwa mem .*flt3-001.fa *TestSample2/TestSample2.R1.fq.gz'
      - 'bwa mem .*flt3-001.fa *TestSample3/TestSample3.R1.fq.gz'
      # The fusion_arriba rule should use the aligned bam file of the align module
      - 'arriba .* -x TestSample1/snv-indels/Aligned.sortedByCoord.out.bam'
      - 'arriba .* -x TestSample2/snv-indels/Aligned.sortedByCoord.out.bam'
      - 'arriba .* -x TestSample3/snv-indels/Aligned.sortedByCoord.out.bam'

    must_not_contain:
      - "rule generate_html_report:"

# Singularity should be available
- name: test-hamlet-sanity-singularity
  tags:
    - sanity
    - hamlet
  command: >
    singularity --version
  stdout:
    contains_regex:
      - "singularity(-ce)? version 3"

# HAMLET should run without crashing on targetted RNAseq data, which gives no
# results for most modules
- name: test-hamlet-targetted-RNA
  tags:
    - functional
    - hamlet
  command: >
    bash -c "
    set -e 

    unxz -k test/data/reference/hamlet-ref.fa.xz;
    unxz -k test/data/reference/hamlet-star/Genome.xz;

    snakemake -rp \
      --snakefile Snakefile \
      --configfile test/data/config/hamlet.json \
      --config pepfile=test/pep/targetted.csv \
      --cores \
      --verbose \
      --use-singularity \
      --singularity-args '--cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake'

    rm test/data/reference/hamlet-ref.fa;
    rm test/data/reference/hamlet-star/Genome;
    "
    - path: MO1-RNAseq-1-16714/hamlet_report.SRR8615409.pdf
    - path: "log/generate_report.MO1-RNAseq-1-16714.txt"

# HAMLET pipeline should run successfully with default settings
- name: test-hamlet-chrM
  tags:
    - functional
    - hamlet
  command: >
    bash -c "
    set -e 

    unxz -k test/data/reference/hamlet-ref.fa.xz;
    unxz -k test/data/reference/hamlet-star/Genome.xz;

    snakemake \
      --snakefile Snakefile \
      --configfile test/data/config/hamlet.json \
      --config pepfile=test/pep/chrM_itd.csv \
      --cores \
      --verbose \
      --use-singularity \
      --singularity-args '--cleanenv --bind /tmp' \
      --singularity-prefix '~/.singularity/cache/snakemake' \
      SRR8615409/hamlet_report.SRR8615409.html \
      SRR8615409/hamlet_report.SRR8615409.pdf

    rm test/data/reference/hamlet-ref.fa;
    rm test/data/reference/hamlet-star/Genome;
    "
  files:
    # HAMLET pipeline should generate the final output files
    - path: SRR8615409/SRR8615409.summary.json
      # This variant was blacklisted
      must_not_contain:
        - "ENST00000361899.2:c.175A>G"
    # Test log files
    - path: "log/create_summary.SRR8615409.txt"
    # FastQ files should be cleaned up when they are no longer needed
    - path: SRR8615409/SRR8615409-R1.fq.gz
      should_exist: false
    - path: SRR8615409/SRR8615409-R2.fq.gz
      should_exist: false
    # Test the fusions results
    # We should detect both a BCR::ABL1 and FLT3::FLT3 in the raw fusion results
    # Since only BCR is specified as a fusion partner in the configuration,
    # the FLT3::FLT3 fusion should be filtered
    - path: SRR8615409/fusion/arriba/plots/fusion-1.png
    # This means there should only be a single fusion plot
    - path: SRR8615409/fusion/arriba/plots/fusion-2.png
      should_exist: false

    # The final HAMLET report should contain BCR::ABL, but not FLT3::FLT3
    - path: SRR8615409/hamlet_report.SRR8615409.html
      contains:
        - "BCR::ABL"
      must_not_contain:
        - "FLT3::FLT3"

    # The FLT3 fusion should exist in the initial arriba output file, before it
    # is filtered
    - path: SRR8615409/fusion/arriba/fusions.raw.tsv
      contains:
         - "BCR\tABL1"
         - "FLT3\tFLT3"
    # The final fusion results should contain the BCR ABL1 fusion, but not the FLT3
    - path: SRR8615409/fusion/arriba/fusions.tsv
      contains:
         - "BCR\tABL1"
      must_not_contain:
         - "FLT3\tFLT3"


- name: lint-hamlet
  tags:
    - sanity
    - hamlet
  command: >
    snakemake
    --lint
    --snakefile Snakefile
    --configfile test/data/config/hamlet-dry.json
    --config pepfile=test/pep/chrM.csv

- name: snakefmt-hamlet
  tags:
    - sanity
    - hamlet
  command: snakefmt --check .
