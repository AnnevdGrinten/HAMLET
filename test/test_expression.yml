- name: Test dry run of expression module
  tags:
    - dry-run
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
  stdout:
    contains:
      - "rule merge_samples"
      - "rule transform_counts"

- name: Test error on unknown housekeeping gene
  tags:
    - sanity
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
             housekeeping="Z"
  exit_code: 1
  stdout:
    contains:
      - "Unknown housekeeping gene: Z"

- name: Test error on gene in .bed and genes_of_interest
  tags:
    - sanity
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --dry-run
    --configfile test/data/config/expression.json
    --config pepfile=test/pep/expression.csv
             housekeeping="MT-CO2"
             bed=test/data/reference/transcripts_chrM.bed
             genes_of_interest="MT-ND3 MT-ND2"
  exit_code: 1
  stdout:
    contains:
      - "MT-ND3 is specified twice: in the bed file and genes_of_interest"

- name: Test running the expression module with a bed file
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
      bed=test/data/reference/transcripts_chrM.bed
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.csv
      contains:
        - "MT-CO2\t282\t158\t124"
    # Test the transformed coverage counts to be used with seAMLess. This will
    # only work if there are at least two samples, so we put the sample in
    # there twice
    - path: SRR8615409/expression/seAMLess.tsv
      contains:
        - "X\tSRR8615409\tSRR8615409"
        # Result for unstranded data
        - "ENSG00000211459\t30\t30"
    # Since MT-CO2 was used both as gene of interest and only housekeeping
    # gene, the normalized expression for every strand must be 1.0
    # MT-CO2 was chosen specifically so it does not overlap any other
    # transcripts, which would be taken into account by STAR and give lower
    # counts
    - path: SRR8615409/expression/coverage.normalized.csv
      contains:
        - "MT-CO2\t1.0\t1.0\t1.0"
    # Test that the merged expression files are created, for unstranded,
    # forward and reverse libraries
    - path: merged_expression_unstranded_mqc.tsv
      contains:
        - "id: mqc_expression_unstranded"
    # Empty file since this sample is unstranded
    - path: merged_expression_stranded_mqc.tsv
    # Test that we create the multiqc report
    - path: multiqc_expression.html
      contains:
        - "MT-CO2"

- name: Test running the expression module with genes of interest
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
      genes_of_interest="MT-CO2"
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.csv
      contains:
        - "MT-CO2\t282\t158\t124"
    # Since MT-CO2 was used both as gene of interest and only housekeeping
    # gene, the normalized expression for every strand must be 1.0
    # MT-CO2 was chosen specifically so it does not overlap any other
    # transcripts, which would be taken into account by STAR and give lower
    # counts
    - path: SRR8615409/expression/coverage.normalized.csv
      contains:
        - "MT-CO2\t1.0\t1.0\t1.0"

# The output files will be empty, but it should not crash
- name: Test running the expression module without genes of interest or bed
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression.csv
  exit_code: 0
  files:
    - path: SRR8615409/expression/coverage.csv
    - path: SRR8615409/expression/coverage.normalized.csv

- name: Test running the expression module with a forward stranded sample
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression_forward.csv
      genes_of_interest="MT-RNR1"
  exit_code: 0
  files:
    - path: SRR8615409/expression/seAMLess.tsv
      contains:
        - "X\tSRR8615409\tSRR8615409"
        # Results for the forward strand
        - "ENSG00000211459\t18\t18"
    - path: merged_expression_stranded_mqc.tsv
      contains:
        - "id: mqc_expression_stranded"
        - "Sample\tMT-RNR1"
        - "SRR8615409\t0.113"

- name: Test running the expression module with a reverse stranded sample
  tags:
    - functional
    - expression
  command: >
    snakemake
    --snakefile includes/expression/Snakefile
    --workflow-profile test
    --configfile test/data/config/expression.json
    --config
      pepfile=test/pep/expression_reverse.csv
      genes_of_interest="MT-RNR1"
  exit_code: 0
  files:
    - path: SRR8615409/expression/seAMLess.tsv
      contains:
        - "X\tSRR8615409\tSRR8615409"
        # Results for the reverse strand
        - "ENSG00000211459\t12\t12"
    - path: merged_expression_stranded_mqc.tsv
      contains:
        - "id: mqc_expression_stranded"
        - "Sample\tMT-RNR1"
        - "SRR8615409\t0.096"


- name: Check formatting of Snakemake files
  tags:
    - sanity
    - expression
  command: snakefmt --check includes/expression/
